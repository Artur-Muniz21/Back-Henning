<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%=title%></title>
    <link rel="stylesheet" type="text/css" href="/front/public/stylesheets/style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
</head>
<style>
        body {
        font-family: Arial, sans-serif;
        background-color: #f0f0f0;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        margin: 0;
    }

    .form-container {
        background-color: #ffffff;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        width: 100%;
        max-width: 400px;
    }

    h1 {
        margin-bottom: 20px;
        font-size: 24px;
        text-align: center;
        color: #333;
    }

    .form-group {
        margin-bottom: 15px;
    }

    label {
        display: block;
        margin-bottom: 5px;
        font-weight: bold;
        color: #555;
    }

    input {
        width: 100%;
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 4px;
        font-size: 16px;
    }

    input:focus {
        border-color: #007bff;
        outline: none;
    }

    button {
        width: 100%;
        padding: 10px;
        background-color: #007bff;
        border: none;
        border-radius: 4px;
        color: #fff;
        font-size: 16px;
        cursor: pointer;
    }

    button:hover {
        background-color: #0056b3;
    }

    i {
        margin-right: 5px;
    }
</style>
<body>
    <header>
        <%- include('partials/nav')%>
    </header>
    <div class="form-container">
        <h1><%=title%></h1>

        <form id="userForm">
            <input required type="hidden" name="id" id="id">
            <div class="form-group">
                <label for="username"><i class="fas fa-user"></i> Nome</label>
                <input required name="username" id="username" type="text">
            </div>
            <div class="form-group">
                <label for="password"><i class="fas fa-lock"></i> Senha</label>
                <input required name="password" id="password" type="password">
            </div>
            <div class="form-group">
                <label for="email"><i class="fas fa-envelope"></i> Email</label>
                <input required name="email" id="email" type="email">
            </div>
            <div class="form-group">
                <label for="saldo"><i class="fas fa-wallet"></i> Saldo</label>
                <input required name="saldo" id="saldo" type="text">
            </div>
            <button type="submit"><i class="fas fa-paper-plane"></i> Enviar</button>
        </form>
    </div>

    <script>
        const form = document.getElementById('userForm')
        form.addEventListener("submit", (e) => {
            e.preventDefault()
            const user = mountDataForm()
            let id = user.id
            let METHOD = id ? 'PUT' : 'POST';
            let URL = id ? `/users/${id}` : '/users';
            createOrUpdate(user, URL, METHOD)
        })

        function createOrUpdate(user, URL, METHOD) {
            console.log(user)
            fetch(URL, {
                method: METHOD,
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(user)
            })
                .then(async (res) => { return await checkError(res) })
                .then((user) => {
                    form.reset()
                    window.location.reload()
                })
                .catch((error) => { document.getElementById('error').innerText = error })
        }

        async function checkError(res) {
            if (!res.ok) {
                const err = await res.json()
                throw err
            }
            return res.json()
        }

        function mountDataForm() {
            const formData = new FormData(form)
            const user = {}
            formData.forEach((v, k) => {
                user[k] = v
            })
            return user
        }
    </script>
</body>
</html>
